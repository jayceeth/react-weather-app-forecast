{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  function searchCity() {\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function handleCityName(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.ready) {\n    /*#__PURE__*/\n    _jsxDEV(\"form\", {\n      id: \"search-form\",\n      className: \"mb-3\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Enter a city\",\n            className: \"form-control\",\n            id: \"city-input\",\n            autoComplete: \"off\",\n            onChange: handleCityName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search\",\n            className: \"btn btn-primary w-100\",\n            id: \"submit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this);\n  } else {\n    searchCity();\n  }\n}\n\n_s(Weather, \"lVmXjx335PjpF78QTtam+gOqGM0=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js"],"names":["React","useState","axios","CurrentWeather","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","temperature","Math","round","data","main","temp","wind","speed","name","humidity","description","weather","date","Date","dt","searchCity","apiKey","apiURL","get","then","handleSubmit","event","preventDefault","handleCityName","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\"\n\nexport default function Weather(props){\n    const [weatherData, setWeatherData] = useState({ready:false})\n    const [city, setCity] = useState(props.defaultCity);\n    function handleResponse(response){\n        setWeatherData({\n            ready: true,\n            temperature: Math.round(response.data.main.temp),\n            wind: Math.round(response.data.wind.speed),\n            city: response.data.name,\n            humidity: response.data.main.humidity,\n            description: response.data.weather[0].description,\n            date: new Date(response.data.dt * 1000),\n\n        });\n    }\n    function searchCity(){\n        const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n        let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n        axios.get(apiURL).then(handleResponse);\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        searchCity()\n    }\n    function handleCityName(event){\n        setCity(event.target.value);\n    }\n    if (weatherData.ready){\n                <form id=\"search-form\" className=\"mb-3\" onSubmit={handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <input\n                            type=\"search\"\n                            placeholder=\"Enter a city\"\n                            className=\"form-control\"\n                            id=\"city-input\"\n                            autoComplete=\"off\"\n                            onChange={handleCityName}\n                            />\n                        </div>\n                        <div className=\"col-sm-2\">\n                            <input\n                            type=\"submit\"\n                            value=\"Search\"\n                            className=\"btn btn-primary w-100\"\n                            id=\"submit-button\"\n                            />\n                        </div>\n                    </div>\n                </form>\n        return ( \n                <CurrentWeather data={weatherData}/>\n            )\n    } else{\n        searchCity()\n    }\n    }"]},"metadata":{},"sourceType":"module"}