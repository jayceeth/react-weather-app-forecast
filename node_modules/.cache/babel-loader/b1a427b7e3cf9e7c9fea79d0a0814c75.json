{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description\n    });\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: weatherData.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Last updated: Saturday 10:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-capitalize\",\n          children: weatherData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"sunny\",\n        className: \"temperature\",\n        children: [\"\\u2600\\uFE0F\", weatherData.temperature, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"WeatherCondition\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"humidity\",\n          children: [\"Humidity: \", weatherData.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"wind\",\n          children: [\"Wind: \", weatherData.wind, \" mph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  } else {\n    let city = \"San Francisco\";\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"0DyprrCAhwhFORCLpp/7nIQALmw=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js"],"names":["React","useState","axios","Weather","weatherData","setWeatherData","ready","handleResponse","response","temperature","Math","round","data","main","temp","wind","speed","city","name","humidity","description","weather","apiKey","apiURL","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAC;AAAP,GAAD,CAA9C;;AACA,WAASC,cAAT,CAAwBC,QAAxB,EAAiC;AAC7BH,IAAAA,cAAc,CAAC;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXG,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,IAA9B,CAFF;AAGXC,MAAAA,IAAI,EAAEL,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,KAA9B,CAHK;AAIXC,MAAAA,IAAI,EAAET,QAAQ,CAACI,IAAT,CAAcM,IAJT;AAKXC,MAAAA,QAAQ,EAAEX,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBM,QALlB;AAMXC,MAAAA,WAAW,EAAEZ,QAAQ,CAACI,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBD;AAN3B,KAAD,CAAd;AASH;;AACD,MAAIhB,WAAW,CAACE,KAAhB,EAAsB;AAClB,wBACQ;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACI;AAAA,kBAAKF,WAAW,CAACa;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCb,WAAW,CAACgB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAMY;AAAM,QAAA,IAAI,EAAC,KAAX;AAAiB,sBAAW,OAA5B;AAAoC,QAAA,SAAS,EAAC,aAA9C;AAAA,mCACOhB,WAAW,CAACK,WADnB;AAAA;AAAA;AAAA;AAAA;AAAA,cANZ,eASQ;AAAA;AAAA;AAAA;AAAA,cATR,eAUQ;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA,mCAAoCL,WAAW,CAACe,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,+BAA4Bf,WAAW,CAACW,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAiBH,GAlBD,MAkBM;AACF,QAAIE,IAAI,GAAG,eAAX;AACA,UAAMK,MAAM,GAAG,kCAAf;AACA,QAAIC,MAAM,GAAI,oDAAmDN,IAAK,UAASK,MAAO,iBAAtF;AACApB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBlB,cAAvB;AACA,WACI,YADJ;AAGH;AAEJ;;GAzCuBJ,O;;KAAAA,O","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\"\n\nexport default function Weather(){\n    const [weatherData, setWeatherData] = useState({ready:false})\n    function handleResponse(response){\n        setWeatherData({\n            ready: true,\n            temperature: Math.round(response.data.main.temp),\n            wind: Math.round(response.data.wind.speed),\n            city: response.data.name,\n            humidity: response.data.main.humidity,\n            description: response.data.weather[0].description,\n\n        });\n    }\n    if (weatherData.ready){\n        return (\n                <div className = \"Weather\">\n                    <h1>{weatherData.city}</h1>\n                        <ul>\n                            <li>Last updated: Saturday 10:00</li>\n                            <li className=\"text-capitalize\">{weatherData.description}</li>\n                        </ul>\n                            <span role=\"img\" aria-label=\"sunny\" className=\"temperature\">\n                                ☀️{weatherData.temperature}°F\n                            </span>\n                        <br />\n                        <ul className=\"WeatherCondition\">\n                            <li className=\"humidity\">Humidity: {weatherData.humidity}%</li>\n                            <li className=\"wind\">Wind: {weatherData.wind} mph</li>\n                        </ul>\n                </div>\n            )\n    } else{\n        let city = \"San Francisco\";\n        const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n        let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n        axios.get(apiURL).then(handleResponse);\n        return (\n            \"Loading...\"\n        )\n    }\n \n}"]},"metadata":{},"sourceType":"module"}