{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app-forecast/src/Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport ForecastOne from \"./ForecastOne\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function handleCityName(event) {\n    setCity(event.target.value);\n  }\n\n  function searchCity() {\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 searchBox\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"searchButton\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Search\",\n                className: \"btn btn-primary w-100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForecastOne, {\n        coordinates: weatherData.coordinates,\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else {\n    searchCity();\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app-forecast/src/Weather.jsx"],"names":["React","useState","axios","CurrentWeather","ForecastOne","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","coordinates","data","coord","temperature","Math","round","main","temp","wind","speed","name","humidity","description","weather","date","Date","dt","icon","handleSubmit","event","preventDefault","searchCity","handleCityName","target","value","apiKey","apiURL","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,sCAAP;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACK,KAAK,CAACM,WAAP,CAAhC;;AAEA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCN,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,IADM;AAEbM,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,KAFd;AAGbC,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACE,IAAT,CAAcK,IAAd,CAAmBC,IAA9B,CAHA;AAIbC,MAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACE,IAAT,CAAcO,IAAd,CAAmBC,KAA9B,CAJO;AAKbd,MAAAA,IAAI,EAAEI,QAAQ,CAACE,IAAT,CAAcS,IALP;AAMbC,MAAAA,QAAQ,EAAEZ,QAAQ,CAACE,IAAT,CAAcK,IAAd,CAAmBK,QANhB;AAObC,MAAAA,WAAW,EAAEb,QAAQ,CAACE,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBD,WAPzB;AAQbE,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAShB,QAAQ,CAACE,IAAT,CAAce,EAAd,GAAmB,IAA5B,CARO;AASbC,MAAAA,IAAI,EAAG,qCAAoClB,QAAQ,CAACE,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBI,IAAK;AAT5D,KAAD,CAAd;AAWD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,UAAU;AACX;;AACD,WAASC,cAAT,CAAwBH,KAAxB,EAA+B;AAC7BvB,IAAAA,OAAO,CAACuB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASH,UAAT,GAAsB;AACpB,UAAMI,MAAM,GAAG,kCAAf;AACA,QAAIC,MAAM,GAAI,qDAAoD/B,IAAK,UAAS8B,MAAO,iBAAvF;AACAtC,IAAAA,KAAK,CAACwC,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuB9B,cAAvB;AACD;;AAED,MAAIN,WAAW,CAACE,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEwB,YAAhB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,WAAW,EAAC,cAFd;AAGE,cAAA,SAAS,EAAC,cAHZ;AAIE,cAAA,SAAS,EAAC,IAJZ;AAKE,cAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,KAAK,EAAC,QAFR;AAGE,gBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE9B;AAAtB;AAAA;AAAA;AAAA;AAAA,cAvBF,eAwBE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEA,WAAW,CAACQ,WAAtC;AAAmD,QAAA,IAAI,EAAER;AAAzD;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD,GA7BD,MA6BO;AACL6B,IAAAA,UAAU;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GAjEuB/B,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport ForecastOne from \"./ForecastOne\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n  function handleCityName(event) {\n    setCity(event.target.value);\n  }\n\n  function searchCity() {\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-4 searchBox\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityName}\n              />\n            </div>\n            <div className=\"col-2\">\n              <div className=\"searchButton\">\n                <input\n                  type=\"submit\"\n                  value=\"Search\"\n                  className=\"btn btn-primary w-100\"\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n        <CurrentWeather data={weatherData} />\n        <ForecastOne coordinates={weatherData.coordinates} data={weatherData} />\n      </div>\n    );\n  } else {\n    searchCity();\n    return <p> Loading...</p>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}