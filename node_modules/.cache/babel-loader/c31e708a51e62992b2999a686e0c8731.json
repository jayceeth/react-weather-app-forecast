{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function handleCityName(event) {\n    setCity(event.target.value);\n  }\n\n  function searchCity() {\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } else {\n    searchCity();\n  }\n}\n\n_s(Weather, \"lVmXjx335PjpF78QTtam+gOqGM0=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js"],"names":["React","useState","axios","CurrentWeather","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","temperature","Math","round","data","main","temp","wind","speed","name","humidity","description","weather","date","Date","dt","handleSubmit","event","preventDefault","searchCity","handleCityName","target","value","apiKey","apiURL","get","then"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Weather.css\"\n\nexport default function Weather(props){\n    const [weatherData, setWeatherData] = useState({ready:false})\n    const [city, setCity] = useState(props.defaultCity);\n\n    function handleResponse(response){\n        setWeatherData({\n            ready: true,\n            temperature: Math.round(response.data.main.temp),\n            wind: Math.round(response.data.wind.speed),\n            city: response.data.name,\n            humidity: response.data.main.humidity,\n            description: response.data.weather[0].description,\n            date: new Date(response.data.dt * 1000),\n        });\n    }\n\n      function handleSubmit(event){\n        event.preventDefault()\n        searchCity()\n    }\n    function handleCityName(event){\n        setCity(event.target.value);\n    }\n\n    function searchCity(){\n        const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n        let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n        axios.get(apiURL).then(handleResponse);\n    }\n\n  \n    if (weatherData.ready){\n        return(\n            <div className=\"Weather\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col-9\">\n                            <input type=\"search\" placeholder=\"Enter a city\" className=\"form-control\" autoFocus=\"on\" onChange={handleCityName} />\n                        </div>\n                        <div className=\"col-3\">\n                            <input type=\"submit\" value=\"Search\" className=\"btn btn-primary w-100\" />\n                        </div>\n                    </div>\n                </form>\n                 <CurrentWeather  data={weatherData}/>\n            </div>\n           \n        );\n    }else{\n            searchCity();\n        }\n    }"]},"metadata":{},"sourceType":"module"}