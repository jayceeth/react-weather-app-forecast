{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SearchEngine from \"./SearchEngine\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: Math.round(response.data.main.temp),\n      wind: Math.round(response.data.wind.speed),\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(SearchEngine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  } else {\n    let city = \"San Francisco\";\n    const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"lVmXjx335PjpF78QTtam+gOqGM0=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app/src/Weather.js"],"names":["React","useState","axios","SearchEngine","CurrentWeather","Weather","weatherData","setWeatherData","ready","city","setCity","props","defaultCity","handleResponse","response","temperature","Math","round","data","main","temp","wind","speed","name","humidity","description","weather","date","Date","dt","apiKey","apiURL","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAC;AAAP,GAAD,CAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,KAAK,CAACC,WAAP,CAAhC;;AACA,WAASC,cAAT,CAAwBC,QAAxB,EAAiC;AAC7BP,IAAAA,cAAc,CAAC;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXO,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,IAA9B,CAFF;AAGXC,MAAAA,IAAI,EAAEL,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,KAA9B,CAHK;AAIXb,MAAAA,IAAI,EAAEK,QAAQ,CAACI,IAAT,CAAcK,IAJT;AAKXC,MAAAA,QAAQ,EAAEV,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBK,QALlB;AAMXC,MAAAA,WAAW,EAAEX,QAAQ,CAACI,IAAT,CAAcQ,OAAd,CAAsB,CAAtB,EAAyBD,WAN3B;AAOXE,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASd,QAAQ,CAACI,IAAT,CAAcW,EAAd,GAAmB,IAA5B;AAPK,KAAD,CAAd;AAUH;;AACD,MAAIvB,WAAW,CAACE,KAAhB,EAAsB;AAClB,WACQ,qBAAC,YAAD;AAAA;AAAA;AAAA;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFR;AAIH,GALD,MAKM;AACF,QAAIG,IAAI,GAAG,eAAX;AACA,UAAMqB,MAAM,GAAG,kCAAf;AACA,QAAIC,MAAM,GAAI,oDAAmDtB,IAAK,UAASqB,MAAO,iBAAtF;AACA5B,IAAAA,KAAK,CAAC8B,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBpB,cAAvB;AACA,WACI,YADJ;AAGH;AAEJ;;GA9BuBR,O;;KAAAA,O","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport SearchEngine from \"./SearchEngine\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"./Weather.css\"\n\nexport default function Weather(){\n    const [weatherData, setWeatherData] = useState({ready:false})\n    const [city, setCity] = useState(props.defaultCity);\n    function handleResponse(response){\n        setWeatherData({\n            ready: true,\n            temperature: Math.round(response.data.main.temp),\n            wind: Math.round(response.data.wind.speed),\n            city: response.data.name,\n            humidity: response.data.main.humidity,\n            description: response.data.weather[0].description,\n            date: new Date(response.data.dt * 1000),\n\n        });\n    }\n    if (weatherData.ready){\n        return (\n                <SearchEngine />,\n                <CurrentWeather data={weatherData}/>\n            )\n    } else{\n        let city = \"San Francisco\";\n        const apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n        let apiURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=imperial`;\n        axios.get(apiURL).then(handleResponse);\n        return (\n            \"Loading...\"\n        )\n    }\n \n}"]},"metadata":{},"sourceType":"module"}