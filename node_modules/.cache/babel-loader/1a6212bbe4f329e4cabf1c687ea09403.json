{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app-forecast/src/ForecastOne.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./ForecastOne.css\";\nimport WeatherForecastDaily from \"./WeatherForecastDaily\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForecastOne(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastOne\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecastOne, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 weather-forecast-one\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDaily, {\n                data: dailyForecastOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n    return null;\n  }\n}\n\n_s(ForecastOne, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = ForecastOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastOne\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app-forecast/src/ForecastOne.jsx"],"names":["React","useState","useEffect","WeatherForecastDaily","axios","ForecastOne","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecastOne","index","apiKey","longitude","lon","latitude","lat","apiURL","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGE,QAAQ,CAACO,GAAT,CAAa,UAAUC,gBAAV,EAA4BC,KAA5B,EAAmC;AAC/C,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,qCACE,QAAC,oBAAD;AAAsB,gBAAA,IAAI,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF,eAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;;AACD,8BAAO,qCAAP;AACD,SATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBD,MAiBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAlC;AACA,QAAIC,QAAQ,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,iBAA9G;AACAf,IAAAA,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AACA,WAAO,IAAP;AACD;AACF;;GAtCuBP,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ForecastOne.css\";\nimport WeatherForecastDaily from \"./WeatherForecastDaily\";\nimport axios from \"axios\";\n\nexport default function ForecastOne(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"ForecastOne\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecastOne, index) {\n            if (index < 6) {\n              return (\n                <div className=\"col-4 weather-forecast-one\" key={index}>\n                  <WeatherForecastDaily data={dailyForecastOne} />\n                </div>\n              );\n            }\n            return <></>;\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=imperial`;\n    axios.get(apiURL).then(handleResponse);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}