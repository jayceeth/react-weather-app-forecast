{"ast":null,"code":"var _jsxFileName = \"/Users/jayceeth1/Desktop/react-weather-app-forecast/src/ForecastOne.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ForecastOne.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastOne(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForecastOne\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Forecast-day\",\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Forecast-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.data.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Forecast-temperatures\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Forecast-temperature-max\",\n              children: \"80\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Forecast-temperature-min\",\n              children: \"50\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = \"f0229aa4803b78f326fa1951e4c8d9a5\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&unit=imperial`;\n    axios.get(apiURL).then(handleResponse);\n    return null;\n  }\n}\n\n_s(ForecastOne, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = ForecastOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastOne\");","map":{"version":3,"sources":["/Users/jayceeth1/Desktop/react-weather-app-forecast/src/ForecastOne.js"],"names":["React","useState","axios","ForecastOne","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","icon","apiKey","longitude","coordinates","lon","latitude","lat","apiURL","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACtC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAoBL,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAI,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAtC;;AACA,WAASQ,cAAT,CAAwBC,QAAxB,EAAiC;AAC7BF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACH;;AAED,MAAIP,MAAJ,EAAW;AACN,wBACD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACS;AACG,cAAA,GAAG,EAAED,KAAK,CAACO,IAAN,CAAWE;AADnB;AAAA;AAAA;AAAA;AAAA;AADT;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADC;AAkBJ,GAnBD,MAmBM;AACF,QAAIC,MAAM,GAAE,kCAAZ;AACA,QAAIC,SAAS,GAAGX,KAAK,CAACY,WAAN,CAAkBC,GAAlC;AACA,QAAIC,QAAQ,GAAGd,KAAK,CAACY,WAAN,CAAkBG,GAAjC;AACA,QAAIC,MAAM,GAAG,uDAAsDF,QAAS,QAAOH,SAAU,UAASD,MAAO,gBAA7G;AACAZ,IAAAA,KAAK,CAACmB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBb,cAAvB;AACA,WAAO,IAAP;AACH;AAEJ;;GAnCuBN,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\nimport \"./ForecastOne.css\";\nimport axios from \"axios\";\n\nexport default function ForecastOne(props){\n    let [loaded, setLoaded]=useState(false);\n    let [forecast, setForecast] = useState(null);\n    function handleResponse(response){\n        setForecast(response.data.daily);\n    }\n  \n    if (loaded){\n         return(\n        <div className=\"ForecastOne\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"Forecast-day\">Sun</div>\n                    <div className=\"Forecast-icon\">\n                             <img\n                                src={props.data.icon}\n                                />\n                    </div>\n                    <div className=\"Forecast-temperatures\">\n                        <span className=\"Forecast-temperature-max\">80°</span>\n                        <span className=\"Forecast-temperature-min\">50°</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    } else{\n        let apiKey =\"f0229aa4803b78f326fa1951e4c8d9a5\";\n        let longitude = props.coordinates.lon;\n        let latitude = props.coordinates.lat;\n        let apiURL =`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&unit=imperial`\n        axios.get(apiURL).then(handleResponse);\n        return null;\n    }\n   \n}"]},"metadata":{},"sourceType":"module"}